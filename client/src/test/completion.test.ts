import * as vscode from 'vscode';
import * as assert from 'assert';
import { getDocUri, activate } from './helper';

suite('Completion test suite', () => {
	test('Completes the default FeenoX labels', async () => {
		const docUri = getDocUri('default-completion.fee');
		const startOfDocument = new vscode.Position(0, 0);
		const itemsCount = 304;

		await testCompletion(
			docUri, startOfDocument, itemsCount, {items: FEENOX_ITEMS});
	});

	test('Completes the FeenoX labels and the labels from the opened document\
		that has no comments', async () => {
		const docUri = getDocUri('completion-no-comments.fee');
		const expectedItems = [...FEENOX_ITEMS, ...USER_ITEMS];
		const endOfDocument = new vscode.Position(7, 0);
		const itemsCount = 310;

		await testCompletion(
			docUri, endOfDocument, itemsCount, {items: expectedItems});
	});

	test('Completes the FeenoX labels and the labels from the opened document\
		that has comments', async () => {
		const docUri = getDocUri('completion-with-comments.fee');
		const expectedItems = [...FEENOX_ITEMS, ...USER_ITEMS];
		const endOfDocument = new vscode.Position(9, 0);
		const itemsCount = 310;

		await testCompletion(
			docUri, endOfDocument, itemsCount, {items: expectedItems});
	});
});

async function testCompletion(
	docUri: vscode.Uri,
	position: vscode.Position,
	expectedCompletionCount: number,
	expectedCompletionList: vscode.CompletionList) {
	await activate(docUri);

	// Executing the command `vscode.executeCompletionItemProvider` to simulate
	// triggering completion
	const actualCompletionList = (await vscode.commands.executeCommand(
		'vscode.executeCompletionItemProvider',
		docUri,
		position,
	)) as vscode.CompletionList;

	// Check that the number of items is the expected
	assert.ok(actualCompletionList.items.length === expectedCompletionCount);

	// Check that the completion items match
	// The order does not matter since the client reorders them anyways
	const INDEX_NOT_FOUND = -1;
	actualCompletionList.items.forEach(actualItem => {
		const index = expectedCompletionList.items.findIndex(expectedItem => {
			return (expectedItem.label === actualItem.label &&
				expectedItem.kind === actualItem.kind);
		});

		assert.ok(index !== INDEX_NOT_FOUND);
	});
}

const FEENOX_ITEMS: Array<vscode.CompletionItem> = [
	{label: 'ABORT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'abs', kind: vscode.CompletionItemKind.Function},
	{label: 'acos', kind: vscode.CompletionItemKind.Function},
	{label: 'ALIAS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'ALLOWED', kind: vscode.CompletionItemKind.Keyword},
	{label: 'AS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'AS_PROVIDED', kind: vscode.CompletionItemKind.Keyword},
	{label: 'ASCENDING', kind: vscode.CompletionItemKind.Keyword},
	{label: 'ASCENDING_ORDER', kind: vscode.CompletionItemKind.Keyword},
	{label: 'ASCII_FILE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'ASCII_FILE_PATH', kind: vscode.CompletionItemKind.Keyword},
	{label: 'asin', kind: vscode.CompletionItemKind.Function},
	{label: 'atan', kind: vscode.CompletionItemKind.Function},
	{label: 'atan2', kind: vscode.CompletionItemKind.Function},
	{label: 'AXISYMMETRIC', kind: vscode.CompletionItemKind.Keyword},
	{label: 'BC', kind: vscode.CompletionItemKind.Keyword},
	{label: 'BINARY_FILE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'BINARY_FILE_PATH', kind: vscode.CompletionItemKind.Keyword},
	{label: 'BOUNDARY_CONDITION', kind: vscode.CompletionItemKind.Keyword},
	{label: 'ceil', kind: vscode.CompletionItemKind.Function},
	{label: 'CELL', kind: vscode.CompletionItemKind.Keyword},
	{label: 'CELLS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'clock', kind: vscode.CompletionItemKind.Function},
	{label: 'CLOSE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'COLS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'COLUMNS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'COMPUTE_REACTION', kind: vscode.CompletionItemKind.Keyword},
	{label: 'cos', kind: vscode.CompletionItemKind.Function},
	{label: 'cosh', kind: vscode.CompletionItemKind.Function},
	{label: 'cpu_time', kind: vscode.CompletionItemKind.Function},
	{label: 'd_dt', kind: vscode.CompletionItemKind.Function},
	{label: 'dae_rtol', kind: vscode.CompletionItemKind.Variable},
	{label: 'DATA', kind: vscode.CompletionItemKind.Keyword},
	{label: 'deadband', kind: vscode.CompletionItemKind.Function},
	{label: 'DEFAULT_ARGUMENT_VALUE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'derivative', kind: vscode.CompletionItemKind.Function},
	{label: 'DESCENDING', kind: vscode.CompletionItemKind.Keyword},
	{label: 'DESCENDING_ORDER', kind: vscode.CompletionItemKind.Keyword},
	{label: 'DETECT_HANGING_NODES', kind: vscode.CompletionItemKind.Keyword},
	{label: 'DIM', kind: vscode.CompletionItemKind.Keyword},
	{label: 'DIMENSION', kind: vscode.CompletionItemKind.Keyword},
	{label: 'DIMENSIONS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'DIRICHLET_SCALING', kind: vscode.CompletionItemKind.Keyword},
	{label: 'done', kind: vscode.CompletionItemKind.Variable},
	{label: 'done_static', kind: vscode.CompletionItemKind.Variable},
	{label: 'done_transient', kind: vscode.CompletionItemKind.Variable},
	{label: 'dont_quit', kind: vscode.CompletionItemKind.Variable},
	{label: 'dont_report', kind: vscode.CompletionItemKind.Variable},
	{label: 'dt', kind: vscode.CompletionItemKind.Variable},
	{label: 'DUMP', kind: vscode.CompletionItemKind.Keyword},
	{label: 'EIGEN_FORMULATION', kind: vscode.CompletionItemKind.Keyword},
	{label: 'EIGEN_SOLVER', kind: vscode.CompletionItemKind.Keyword},
	{label: 'ELSE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'end_time', kind: vscode.CompletionItemKind.Variable},
	{label: 'ENDIF', kind: vscode.CompletionItemKind.Keyword},
	{label: 'EPS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'EPS_TYPE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'EPSABS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'EPSREL', kind: vscode.CompletionItemKind.Keyword},
	{label: 'equal', kind: vscode.CompletionItemKind.Function},
	{label: 'exp', kind: vscode.CompletionItemKind.Function},
	{label: 'expint1', kind: vscode.CompletionItemKind.Function},
	{label: 'expint2', kind: vscode.CompletionItemKind.Function},
	{label: 'expint3', kind: vscode.CompletionItemKind.Function},
	{label: 'expintn', kind: vscode.CompletionItemKind.Function},
	{label: 'FILE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'FILE_FORMAT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'FILE_PATH', kind: vscode.CompletionItemKind.Keyword},
	{label: 'FIND_EXTREMA', kind: vscode.CompletionItemKind.Keyword},
	{label: 'FIT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'floor', kind: vscode.CompletionItemKind.Function},
	{label: 'FOR', kind: vscode.CompletionItemKind.Keyword},
	{label: 'FORMAT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'FROM', kind: vscode.CompletionItemKind.Keyword},
	{label: 'func_min', kind: vscode.CompletionItemKind.Function},
	{label: 'FUNCTION', kind: vscode.CompletionItemKind.Keyword},
	{label: 'FUNCTION_DATA', kind: vscode.CompletionItemKind.Keyword},
	{label: 'GAUSS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'gauss_kronrod', kind: vscode.CompletionItemKind.Function},
	{label: 'gauss_legendre', kind: vscode.CompletionItemKind.Function},
	{label: 'GRADIENT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'HANDLE_HANGING_NODES', kind: vscode.CompletionItemKind.Keyword},
	{label: 'HEADER', kind: vscode.CompletionItemKind.Keyword},
	{label: 'heaviside', kind: vscode.CompletionItemKind.Function},
	{label: 'HISTORY', kind: vscode.CompletionItemKind.Keyword},
	{label: 'i', kind: vscode.CompletionItemKind.Variable},
	{label: 'I_MAX', kind: vscode.CompletionItemKind.Keyword},
	{label: 'I_MIN', kind: vscode.CompletionItemKind.Keyword},
	{label: 'ID', kind: vscode.CompletionItemKind.Keyword},
	{label: 'IF', kind: vscode.CompletionItemKind.Keyword},
	{label: 'if', kind: vscode.CompletionItemKind.Function},
	{label: 'IGNORE_NULL', kind: vscode.CompletionItemKind.Keyword},
	{label: 'IMPLICIT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'in_static', kind: vscode.CompletionItemKind.Variable},
	{label: 'in_static_first', kind: vscode.CompletionItemKind.Variable},
	{label: 'in_static_last', kind: vscode.CompletionItemKind.Variable},
	{label: 'in_transient', kind: vscode.CompletionItemKind.Variable},
	{label: 'in_transient_first', kind: vscode.CompletionItemKind.Variable},
	{label: 'in_transient_last', kind: vscode.CompletionItemKind.Variable},
	{label: 'INCLUDE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'infinite', kind: vscode.CompletionItemKind.Variable},
	{label: 'INITIAL_CONDITIONS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'INITIAL_CONDITIONS_MODE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'INPUT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'INPUT_FILE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'integral', kind: vscode.CompletionItemKind.Function},
	{label: 'integral_dt', kind: vscode.CompletionItemKind.Function},
	{label: 'integral_euler_dt', kind: vscode.CompletionItemKind.Function},
	{label: 'INTEGRATE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'INTEGRATION', kind: vscode.CompletionItemKind.Keyword},
	{label: 'INTERPOLATION', kind: vscode.CompletionItemKind.Keyword},
	{label: 'INTERPOLATION_THRESHOLD', kind: vscode.CompletionItemKind.Keyword},
	{label: 'IS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'is_even', kind: vscode.CompletionItemKind.Function},
	{label: 'is_in_interval', kind: vscode.CompletionItemKind.Function},
	{label: 'is_odd', kind: vscode.CompletionItemKind.Function},
	{label: 'j', kind: vscode.CompletionItemKind.Variable},
	{label: 'j0', kind: vscode.CompletionItemKind.Function},
	{label: 'K', kind: vscode.CompletionItemKind.Keyword},
	{label: 'K_bc', kind: vscode.CompletionItemKind.Keyword},
	{label: 'KSP', kind: vscode.CompletionItemKind.Keyword},
	{label: 'KSP_TYPE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'lag', kind: vscode.CompletionItemKind.Function},
	{label: 'lag_bilinear', kind: vscode.CompletionItemKind.Function},
	{label: 'lag_euler', kind: vscode.CompletionItemKind.Function},
	{label: 'last', kind: vscode.CompletionItemKind.Function},
	{label: 'limit', kind: vscode.CompletionItemKind.Function},
	{label: 'limit_dt', kind: vscode.CompletionItemKind.Function},
	{label: 'LINEAR', kind: vscode.CompletionItemKind.Keyword},
	{label: 'LINEAR_SOLVER', kind: vscode.CompletionItemKind.Keyword},
	{label: 'LINEARIZE_STRESS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'log', kind: vscode.CompletionItemKind.Function},
	{label: 'M', kind: vscode.CompletionItemKind.Keyword},
	{label: 'M_bc', kind: vscode.CompletionItemKind.Keyword},
	{label: 'MAIN', kind: vscode.CompletionItemKind.Keyword},
	{label: 'mark_max', kind: vscode.CompletionItemKind.Function},
	{label: 'mark_min', kind: vscode.CompletionItemKind.Function},
	{label: 'MATERIAL', kind: vscode.CompletionItemKind.Keyword},
	{label: 'MATRIX', kind: vscode.CompletionItemKind.Keyword},
	{label: 'MAX', kind: vscode.CompletionItemKind.Keyword},
	{label: 'max', kind: vscode.CompletionItemKind.Function},
	{label: 'max_dt', kind: vscode.CompletionItemKind.Variable},
	{label: 'MAX_ITER', kind: vscode.CompletionItemKind.Keyword},
	{label: 'memory', kind: vscode.CompletionItemKind.Function},
	{label: 'MESH', kind: vscode.CompletionItemKind.Keyword},
	{label: 'METHOD', kind: vscode.CompletionItemKind.Keyword},
	{label: 'MIN', kind: vscode.CompletionItemKind.Keyword},
	{label: 'min', kind: vscode.CompletionItemKind.Function},
	{label: 'min_dt', kind: vscode.CompletionItemKind.Variable},
	{label: 'mod', kind: vscode.CompletionItemKind.Function},
	{label: 'MODE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'MODES', kind: vscode.CompletionItemKind.Keyword},
	{label: 'MOMENT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'NAME', kind: vscode.CompletionItemKind.Keyword},
	{label: 'ncores', kind: vscode.CompletionItemKind.Variable},
	{label: 'NO_MESH', kind: vscode.CompletionItemKind.Keyword},
	{label: 'NO_PHYSICAL_NAMES', kind: vscode.CompletionItemKind.Keyword},
	{label: 'NODE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'NODES', kind: vscode.CompletionItemKind.Keyword},
	{label: 'NOMESH', kind: vscode.CompletionItemKind.Keyword},
	{label: 'NON_LINEAR', kind: vscode.CompletionItemKind.Keyword},
	{label: 'NON_LINEAR_SOLVER', kind: vscode.CompletionItemKind.Keyword},
	{label: 'NONE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'NONEWLINE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'NONLINEAR_SOLVER', kind: vscode.CompletionItemKind.Keyword},
	{label: 'not', kind: vscode.CompletionItemKind.Function},
	{label: 'NSTEPS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'OFFSET', kind: vscode.CompletionItemKind.Keyword},
	{label: 'on_gsl_error', kind: vscode.CompletionItemKind.Variable},
	{label: 'on_nan', kind: vscode.CompletionItemKind.Variable},
	{label: 'on_sundials_error', kind: vscode.CompletionItemKind.Variable},
	{label: 'OPEN', kind: vscode.CompletionItemKind.Keyword},
	{label: 'OUTPUT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'OUTPUT_FILE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'OVER', kind: vscode.CompletionItemKind.Keyword},
	{label: 'PATH', kind: vscode.CompletionItemKind.Keyword},
	{label: 'PC', kind: vscode.CompletionItemKind.Keyword},
	{label: 'PC_TYPE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'PETSC_OPTIONS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'PHASE_SPACE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'PHYSICAL_ENTITY', kind: vscode.CompletionItemKind.Keyword},
	{label: 'PHYSICAL_GROUP', kind: vscode.CompletionItemKind.Keyword},
	{label: 'pi', kind: vscode.CompletionItemKind.Variable},
	{label: 'pid', kind: vscode.CompletionItemKind.Variable},
	{label: 'POST', kind: vscode.CompletionItemKind.Keyword},
	{label: 'PRECONDITIONER', kind: vscode.CompletionItemKind.Keyword},
	{label: 'PRINT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'PRINT_FUNCTION', kind: vscode.CompletionItemKind.Keyword},
	{label: 'PRINT_VECTOR', kind: vscode.CompletionItemKind.Keyword},
	{label: 'PROBLEM', kind: vscode.CompletionItemKind.Keyword},
	{label: 'prod', kind: vscode.CompletionItemKind.Function},
	{label: 'PROGRESS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'PROGRESS_ASCII', kind: vscode.CompletionItemKind.Keyword},
	{label: 'quasi_random', kind: vscode.CompletionItemKind.Function},
	{label: 'QUASISTATIC', kind: vscode.CompletionItemKind.Keyword},
	{label: 'quit', kind: vscode.CompletionItemKind.Variable},
	{label: 'random', kind: vscode.CompletionItemKind.Function},
	{label: 'random_gauss', kind: vscode.CompletionItemKind.Function},
	{label: 'RANGE_MAX', kind: vscode.CompletionItemKind.Keyword},
	{label: 'RANGE_MIN', kind: vscode.CompletionItemKind.Keyword},
	{label: 'RE_READ', kind: vscode.CompletionItemKind.Keyword},
	{label: 'REACTION', kind: vscode.CompletionItemKind.Keyword},
	{label: 'READ', kind: vscode.CompletionItemKind.Keyword},
	{label: 'READ_FIELD', kind: vscode.CompletionItemKind.Keyword},
	{label: 'READ_FUNCTION', kind: vscode.CompletionItemKind.Keyword},
	{label: 'READ_MESH', kind: vscode.CompletionItemKind.Keyword},
	{label: 'READ_SYMMETRIC_TENSOR', kind: vscode.CompletionItemKind.Keyword},
	{label: 'READ_VECTOR', kind: vscode.CompletionItemKind.Keyword},
	{label: 'realtime_scale', kind: vscode.CompletionItemKind.Variable},
	{label: 'report', kind: vscode.CompletionItemKind.Variable},
	{label: 'RESULT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'root', kind: vscode.CompletionItemKind.Function},
	{label: 'round', kind: vscode.CompletionItemKind.Function},
	{label: 'ROWS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'sawtooth_wave', kind: vscode.CompletionItemKind.Function},
	{label: 'SCALAR_FORMAT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SCALE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SEM', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SEMAPHORE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SEP', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SEPARATOR', kind: vscode.CompletionItemKind.Keyword},
	{label: 'sgn', kind: vscode.CompletionItemKind.Function},
	{label: 'SHEPARD_EXPONENT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SHEPARD_RADIUS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SHM', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SHM_OBJECT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'sin', kind: vscode.CompletionItemKind.Function},
	{label: 'sinh', kind: vscode.CompletionItemKind.Function},
	{label: 'SIZE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SIZES', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SKIP_HEADER_STEP', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SKIP_STATIC_STEP', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SKIP_STEP', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SKIP_TIME', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SNES', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SNES_TYPE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SOLVE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SOLVE_PROBLEM', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SORT_VECTOR', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SPECTRAL_TRANSFORMATION', kind: vscode.CompletionItemKind.Keyword},
	{label: 'sqrt', kind: vscode.CompletionItemKind.Function},
	{label: 'square_wave', kind: vscode.CompletionItemKind.Function},
	{label: 'ST', kind: vscode.CompletionItemKind.Keyword},
	{label: 'ST_TYPE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'static_steps', kind: vscode.CompletionItemKind.Variable},
	{label: 'STEP', kind: vscode.CompletionItemKind.Keyword},
	{label: 'step_static', kind: vscode.CompletionItemKind.Variable},
	{label: 'step_transient', kind: vscode.CompletionItemKind.Variable},
	{label: 'STRING', kind: vscode.CompletionItemKind.Keyword},
	{label: 'sum', kind: vscode.CompletionItemKind.Function},
	{label: 'SYMM_TENSOR', kind: vscode.CompletionItemKind.Keyword},
	{label: 'SYMMETRIC_TENSOR', kind: vscode.CompletionItemKind.Keyword},
	{label: 't', kind: vscode.CompletionItemKind.Variable},
	{label: 'tan', kind: vscode.CompletionItemKind.Function},
	{label: 'tanh', kind: vscode.CompletionItemKind.Function},
	{label: 'TEXT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'threshold_max', kind: vscode.CompletionItemKind.Function},
	{label: 'threshold_min', kind: vscode.CompletionItemKind.Function},
	{label: 'TIME_ADAPTATION', kind: vscode.CompletionItemKind.Keyword},
	{label: 'TIME_PATH', kind: vscode.CompletionItemKind.Keyword},
	{label: 'TO', kind: vscode.CompletionItemKind.Keyword},
	{label: 'TOL_ABS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'TOL_REL', kind: vscode.CompletionItemKind.Keyword},
	{label: 'TRANSIENT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'TRANSIENT_SOLVER', kind: vscode.CompletionItemKind.Keyword},
	{label: 'triangular_wave', kind: vscode.CompletionItemKind.Function},
	{label: 'TS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'TS_ADAPT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'TS_ADAPT_TYPE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'TS_TYPE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'UNKNOWNS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'UPDATE_EACH_STEP', kind: vscode.CompletionItemKind.Keyword},
	{label: 'VAR', kind: vscode.CompletionItemKind.Keyword},
	{label: 'VARIABLE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'VARIABLES', kind: vscode.CompletionItemKind.Keyword},
	{label: 'VARS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'vecdot', kind: vscode.CompletionItemKind.Function},
	{label: 'vecmax', kind: vscode.CompletionItemKind.Function},
	{label: 'vecmaxindex', kind: vscode.CompletionItemKind.Function},
	{label: 'vecmin', kind: vscode.CompletionItemKind.Function},
	{label: 'vecminindex', kind: vscode.CompletionItemKind.Function},
	{label: 'vecnorm', kind: vscode.CompletionItemKind.Function},
	{label: 'vecsize', kind: vscode.CompletionItemKind.Function},
	{label: 'vecsum', kind: vscode.CompletionItemKind.Function},
	{label: 'VECTOR', kind: vscode.CompletionItemKind.Keyword},
	{label: 'VECTOR_SORT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'VECTORS', kind: vscode.CompletionItemKind.Keyword},
	{label: 'VERBOSE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'VIA', kind: vscode.CompletionItemKind.Keyword},
	{label: 'WAIT', kind: vscode.CompletionItemKind.Keyword},
	{label: 'wall_time', kind: vscode.CompletionItemKind.Function},
	{label: 'WRITE', kind: vscode.CompletionItemKind.Keyword},
	{label: 'WRITE_MESH', kind: vscode.CompletionItemKind.Keyword},
	{label: 'X0', kind: vscode.CompletionItemKind.Keyword},
	{label: 'X_INCREASES_FIRST', kind: vscode.CompletionItemKind.Keyword},
	{label: 'X_MAX', kind: vscode.CompletionItemKind.Keyword},
	{label: 'X_MIN', kind: vscode.CompletionItemKind.Keyword},
	{label: 'Y0', kind: vscode.CompletionItemKind.Keyword},
	{label: 'Y_MAX', kind: vscode.CompletionItemKind.Keyword},
	{label: 'Y_MIN', kind: vscode.CompletionItemKind.Keyword},
	{label: 'Z0', kind: vscode.CompletionItemKind.Keyword},
	{label: 'Z_MAX', kind: vscode.CompletionItemKind.Keyword},
	{label: 'Z_MIN', kind: vscode.CompletionItemKind.Keyword},
	{label: 'zero', kind: vscode.CompletionItemKind.Variable}
];

const USER_ITEMS: Array<vscode.CompletionItem> = [
	{label: 'mechanical', kind: vscode.CompletionItemKind.Text},
	{label: 'my-mesh.msh', kind: vscode.CompletionItemKind.Text},
	{label: 'E', kind: vscode.CompletionItemKind.Text},
	{label: 'nu', kind: vscode.CompletionItemKind.Text},
	{label: 'bottom', kind: vscode.CompletionItemKind.Text},
	{label: 'u', kind: vscode.CompletionItemKind.Text}
];
